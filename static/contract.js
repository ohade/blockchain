const abi = [
	{
		"inputs": [
			{
				"internalType": "address[3]",
				"name": "projectOwners",
				"type": "address[3]"
			},
			{
				"internalType": "uint256",
				"name": "durationInSeconds",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "goalAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "contributor",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "currentTotal",
				"type": "uint256"
			}
		],
		"name": "FundingReceived",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "contributor",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "currentTotal",
				"type": "uint256"
			}
		],
		"name": "FundingRejected",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			}
		],
		"name": "fundsWithdrawn",
		"type": "event"
	},
	{
		"inputs": [],
		"name": "amountGoal",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "completeAt",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "contribute",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"name": "contributions",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "currentBalance",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getDetails",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "deadline",
				"type": "uint256"
			},
			{
				"internalType": "enum CrowdfundingProject.State",
				"name": "currentState",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "currentAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "goalAmount",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getRefund",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "raiseBy",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "state",
		"outputs": [
			{
				"internalType": "enum CrowdfundingProject.State",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "title",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "updateDetails",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes32",
				"name": "_msgHash",
				"type": "bytes32"
			},
			{
				"internalType": "uint8[2]",
				"name": "_v",
				"type": "uint8[2]"
			},
			{
				"internalType": "bytes32[2]",
				"name": "_r",
				"type": "bytes32[2]"
			},
			{
				"internalType": "bytes32[2]",
				"name": "_s",
				"type": "bytes32[2]"
			}
		],
		"name": "withdrawFunds",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "payable",
		"type": "function"
	}
]

const bytecode = "60806040526000600860006101000a81548160ff0219169083600381111562000051577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055503480156200006357600080fd5b5060405162001e2738038062001e27833981810160405281019062000089919062000496565b6200009a83620001b660201b60201c565b620000dc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000d39062000583565b60405180910390fd5b6000821162000122576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001199062000561565b60405180910390fd5b6000811162000168576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200015f90620005a5565b60405180910390fd5b8260009060036200017b92919062000331565b506001826200018b919062000687565b426200019891906200062a565b600681905550806003819055506000600581905550505050620008dc565b600080600090505b60038160ff161015620003265760001515600b6000858460ff166003811062000210577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141562000305576001600b6000858460ff1660038110620002a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062000310565b60009150506200032c565b80806200031d9062000769565b915050620001be565b50600190505b919050565b8260038101928215620003a0579160200282015b828111156200039f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000345565b5b509050620003af9190620003b3565b5090565b5b80821115620003ce576000816000905550600101620003b4565b5090565b6000620003e9620003e384620005f0565b620005c7565b905080828560208602820111156200040057600080fd5b60005b858110156200043457816200041988826200043e565b84526020840193506020830192505060018101905062000403565b5050509392505050565b6000815190506200044f81620008a8565b92915050565b600082601f8301126200046757600080fd5b600362000476848285620003d2565b91505092915050565b6000815190506200049081620008c2565b92915050565b600080600060a08486031215620004ac57600080fd5b6000620004bc8682870162000455565b9350506060620004cf868287016200047f565b9250506080620004e2868287016200047f565b9150509250925092565b6000620004fb601d8362000619565b9150620005088262000807565b602082019050919050565b600062000522601e8362000619565b91506200052f8262000830565b602082019050919050565b60006200054960228362000619565b9150620005568262000859565b604082019050919050565b600060208201905081810360008301526200057c81620004ec565b9050919050565b600060208201905081810360008301526200059e8162000513565b9050919050565b60006020820190508181036000830152620005c0816200053a565b9050919050565b6000620005d3620005e6565b9050620005e1828262000733565b919050565b6000604051905090565b600067ffffffffffffffff8211156200060e576200060d620007c7565b5b602082029050919050565b600082825260208201905092915050565b600062000637826200071c565b915062000644836200071c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200067c576200067b62000798565b5b828201905092915050565b600062000694826200071c565b9150620006a1836200071c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620006dd57620006dc62000798565b5b828202905092915050565b6000620006f582620006fc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6200073e82620007f6565b810181811067ffffffffffffffff8211171562000760576200075f620007c7565b5b80604052505050565b6000620007768262000726565b915060ff8214156200078d576200078c62000798565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f6475726174696f6e206e6565647320746f20626520706f736974697665000000600082015250565b7f6e65656420746f206861766520332064697374696e6374206f776e6572730000600082015250565b7f616d6f756e74546f5261697365206e6565647320746f20626520706f7369746960008201527f7665000000000000000000000000000000000000000000000000000000000000602082015250565b620008b381620006e8565b8114620008bf57600080fd5b50565b620008cd816200071c565b8114620008d957600080fd5b50565b61153b80620008ec6000396000f3fe6080604052600436106100a75760003560e01c8063b2d5ae4411610064578063b2d5ae44146101c5578063c19d93fb146101e3578063c6a41bd71461020e578063ce845d1d14610225578063d7bb99ba14610250578063fbbf93a01461025a576100a7565b80630785001c146100ac57806337f944cc146100d757806342e94c90146101025780634a79d50c1461013f5780634c4cea5a1461016a578063ad32f6b114610195575b600080fd5b3480156100b857600080fd5b506100c1610288565b6040516100ce91906110ed565b60405180910390f35b3480156100e357600080fd5b506100ec61028e565b6040516100f991906110ed565b60405180910390f35b34801561010e57600080fd5b5061012960048036038101906101249190610edf565b610294565b60405161013691906110ed565b60405180910390f35b34801561014b57600080fd5b506101546102ac565b60405161016191906110cb565b60405180910390f35b34801561017657600080fd5b5061017f61033a565b60405161018c91906110ed565b60405180910390f35b6101af60048036038101906101aa9190610f08565b610340565b6040516101bc9190611050565b60405180910390f35b6101cd61071d565b6040516101da9190611050565b60405180910390f35b3480156101ef57600080fd5b506101f8610937565b60405161020591906110b0565b60405180910390f35b34801561021a57600080fd5b5061022361094a565b005b34801561023157600080fd5b5061023a610954565b60405161024791906110ed565b60405180910390f35b61025861095a565b005b34801561026657600080fd5b5061026f610a67565b60405161027f9493929190611108565b60405180910390f35b60035481565b60065481565b60096020528060005260406000206000915090505481565b600780546102b990611352565b80601f01602080910402602001604051908101604052809291908181526020018280546102e590611352565b80156103325780601f1061030757610100808354040283529160200191610332565b820191906000526020600020905b81548152906001019060200180831161031557829003601f168201915b505050505081565b60045481565b6000600280600381111561037d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600860009054906101000a900460ff1660038111156103c5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146103cf57600080fd5b6000805b60028160ff1610156105cb5760005b60038160ff1610156105b75760011515600a60008360ff1660ff16815260200190815260200160002060009054906101000a900460ff1615151415610426576105a4565b6001151561055560008360ff166003811061046a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b0160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b8b8660ff16600281106104c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518b8760ff166002811061050a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200201518b8860ff166002811061054b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020020151610a94565b151514156105a3576001600a60008360ff1660ff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060018361059c9190611230565b92506105b7565b5b80806105af906113b5565b9150506103e2565b5080806105c3906113b5565b9150506103d3565b5060028160ff16141561070e576000600554905060006005819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050156106b4577f3260f73ea642f393c831152e7e9a097f6c4e05631a49e5c5882321b7b01cfea9336040516106509190610ffe565b60405180910390a16003600860006101000a81548160ff021916908360038111156106a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550600193505050610714565b806005819055506002600860006101000a81548160ff02191690836003811115610707577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550505b60009250505b50949350505050565b6000610727610b1e565b60016003811115610761577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600860009054906101000a900460ff1660038111156107a9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146107b357600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116107ff57600080fd5b6000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050156108e05780600560008282546108d49190611267565b9250508190555061092e565b80600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000915050610934565b60019150505b90565b600860009054906101000a900460ff1681565b610952610b1e565b565b60055481565b60011515610966610c70565b15151415610a275734600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109bd91906111da565b9250508190555034600560008282546109d691906111da565b925050819055507f5cdc4ab8d637538ead6cc1904d4160343656c8c82bd266635cfd31ac008fffe03334600554604051610a1293929190611019565b60405180910390a1610a22610b1e565b610a65565b7f11fcd32ded770560a0dbf224a5cc6c4d87368084802e53cc9771fb5b21218fc13334600554604051610a5c93929190611019565b60405180910390a15b565b6000806000806006549350600860009054906101000a900460ff1692506005549150600354905090919293565b60008573ffffffffffffffffffffffffffffffffffffffff1660018686868660405160008152602001604052604051610ad0949392919061106b565b6020604051602081039080840390855afa158015610af2573d6000803e3d6000fd5b5050506020604051035173ffffffffffffffffffffffffffffffffffffffff1614905095945050505050565b60035460055410610b7f576002600860006101000a81548160ff02191690836003811115610b75577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550610c67565b60065442118015610c0f5750600380811115610bc4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600860009054906101000a900460ff166003811115610c0c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14155b15610c66576001600860006101000a81548160ff02191690836003811115610c60577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b5b42600481905550565b6000610c7a610b1e565b60006003811115610cb4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600860009054906101000a900460ff166003811115610cfc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480610d87575060026003811115610d3d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600860009054906101000a900460ff166003811115610d85577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b905090565b6000610d9f610d9a84611172565b61114d565b90508082856020860282011115610db557600080fd5b60005b85811015610de55781610dcb8882610eb5565b845260208401935060208301925050600181019050610db8565b5050509392505050565b6000610e02610dfd84611198565b61114d565b90508082856020860282011115610e1857600080fd5b60005b85811015610e485781610e2e8882610eca565b845260208401935060208301925050600181019050610e1b565b5050509392505050565b600081359050610e61816114c0565b92915050565b600082601f830112610e7857600080fd5b6002610e85848285610d8c565b91505092915050565b600082601f830112610e9f57600080fd5b6002610eac848285610def565b91505092915050565b600081359050610ec4816114d7565b92915050565b600081359050610ed9816114ee565b92915050565b600060208284031215610ef157600080fd5b6000610eff84828501610e52565b91505092915050565b60008060008060e08587031215610f1e57600080fd5b6000610f2c87828801610eb5565b9450506020610f3d87828801610e8e565b9350506060610f4e87828801610e67565b92505060a0610f5f87828801610e67565b91505092959194509250565b610f748161129b565b82525050565b610f83816112ad565b82525050565b610f92816112b9565b82525050565b610fa18161130d565b82525050565b6000610fb2826111be565b610fbc81856111c9565b9350610fcc81856020860161131f565b610fd58161149b565b840191505092915050565b610fe9816112f6565b82525050565b610ff881611300565b82525050565b60006020820190506110136000830184610f6b565b92915050565b600060608201905061102e6000830186610f6b565b61103b6020830185610fe0565b6110486040830184610fe0565b949350505050565b60006020820190506110656000830184610f7a565b92915050565b60006080820190506110806000830187610f89565b61108d6020830186610fef565b61109a6040830185610f89565b6110a76060830184610f89565b95945050505050565b60006020820190506110c56000830184610f98565b92915050565b600060208201905081810360008301526110e58184610fa7565b905092915050565b60006020820190506111026000830184610fe0565b92915050565b600060808201905061111d6000830187610fe0565b61112a6020830186610f98565b6111376040830185610fe0565b6111446060830184610fe0565b95945050505050565b6000611157611168565b90506111638282611384565b919050565b6000604051905090565b600067ffffffffffffffff82111561118d5761118c61146c565b5b602082029050919050565b600067ffffffffffffffff8211156111b3576111b261146c565b5b602082029050919050565b600081519050919050565b600082825260208201905092915050565b60006111e5826112f6565b91506111f0836112f6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611225576112246113df565b5b828201905092915050565b600061123b82611300565b915061124683611300565b92508260ff0382111561125c5761125b6113df565b5b828201905092915050565b6000611272826112f6565b915061127d836112f6565b9250828210156112905761128f6113df565b5b828203905092915050565b60006112a6826112d6565b9050919050565b60008115159050919050565b6000819050919050565b60008190506112d1826114ac565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000611318826112c3565b9050919050565b60005b8381101561133d578082015181840152602081019050611322565b8381111561134c576000848401525b50505050565b6000600282049050600182168061136a57607f821691505b6020821081141561137e5761137d61143d565b5b50919050565b61138d8261149b565b810181811067ffffffffffffffff821117156113ac576113ab61146c565b5b80604052505050565b60006113c082611300565b915060ff8214156113d4576113d36113df565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b600481106114bd576114bc61140e565b5b50565b6114c98161129b565b81146114d457600080fd5b50565b6114e0816112b9565b81146114eb57600080fd5b50565b6114f781611300565b811461150257600080fd5b5056fea2646970667358221220dc57cc5cd9d547f36fefb0fc51c2ba64bef3174c4ed7dfebeadc8c1ed040f5ff64736f6c63430008040033";


window.addEventListener('load', async () => {
    // Modern dapp browsers...
    if (window.ethereum) {
        window.web3 = new Web3(ethereum);
    }
    // Legacy dapp browsers...
    else if (window.web3) {
        window.web3 = new Web3(web3.currentProvider);
    }
    else {
        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');
    }
    try {
        await ethereum.enable();
        // Accounts now exposed, use them
        window.web3.eth.getAccounts().then((accounts) => {
            console.log('accounts: ', accounts[0]);
            window.deployAccount = accounts[0];
        })
    } catch (error) {
        alert(error);
    }
});


